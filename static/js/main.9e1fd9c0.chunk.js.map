{"version":3,"sources":["features/table/tableSlice.js","features/table/Table.js","features/table/Button.js","features/table/Modal.js","index.js"],"names":["fetchData","createAsyncThunk","num","a","getState","requestId","signal","console","log","table","loading","currentRequestId","crossfetch","method","response","ok","status","json","body","results","rows","map","row","id","value","name","title","first","last","gender","pic","picture","large","error","Error","statusText","tableSlice","createSlice","initialState","undefined","reducers","deleteRow","state","action","filter","payload","extraReducers","pending","meta","fulfilled","concat","rejected","actions","mapDispatch","connect","location","useLocation","key","to","pathname","backgroud","src","alt","onClick","fetch","Modal","history","useHistory","useParams","useSelector","find","e","stopPropagation","goBack","style","position","top","left","bottom","right","background","className","padding","border","display","justifyContent","alignItems","width","height","reducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","persistor","persistStore","ReactDom","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.9e1fd9c0.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport crossfetch from \"cross-fetch\";\r\n\r\nexport const fetchData = createAsyncThunk(\r\n  \"table/fetch\",\r\n  async (num, { getState, requestId, signal }) => {\r\n    console.log(\"payload callback:\" + num);\r\n    const { loading, currentRequestId } = getState().table;\r\n    if (loading === \"pending\" && currentRequestId === requestId) {\r\n      try {\r\n        const response = await crossfetch(\r\n          `https://api.randomuser.me/?nat=us&gender=female&results=${num}`,\r\n          {\r\n            signal: signal,\r\n            method: \"GET\"\r\n          }\r\n        );\r\n        if (response.ok || (response.status >= 200 && response.status < 300)) {\r\n          const body = await response.json();\r\n          console.log(body);\r\n          const { results } = body;\r\n          let rows = results.map(row => {\r\n            return {\r\n              id: row.id.value,\r\n              name: row.name.title + \" \" + row.name.first + \" \" + row.name.last,\r\n              gender: row.gender,\r\n              pic: row.picture.large\r\n            };\r\n          });\r\n          return rows;\r\n        } else {\r\n          let error = new Error(response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      } catch (e) {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst tableSlice = createSlice({\r\n  name: \"table\",\r\n  initialState: {\r\n    rows: [],\r\n    loading: \"idle\",\r\n    currentRequestId: undefined,\r\n    error: null\r\n  },\r\n  reducers: {\r\n    deleteRow(state, action) {\r\n      state.rows = state.rows.filter(row => row.id !== action.payload);\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [fetchData.pending]: (state, action) => {\r\n      state.loading = \"pending\";\r\n      state.currentRequestId = action.meta.requestId;\r\n    },\r\n    [fetchData.fulfilled]: (state, action) => {\r\n      const { requestId } = action.meta;\r\n      console.log(\"fulfilled:\" + requestId);\r\n      if (state.loading === \"pending\" && state.currentRequestId === requestId) {\r\n        state.loading = \"idle\";\r\n        state.currentRequestId = undefined;\r\n        state.rows = state.rows.concat(action.payload);\r\n      }\r\n    },\r\n    [fetchData.rejected]: (state, action) => {\r\n        if(action.payload){//reject with vaule\r\n            state.error = action.payload;\r\n        }else{\r\n            state.error = action.error;\r\n        }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { deleteRow } = tableSlice.actions;\r\nexport default tableSlice.reducer;\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {deleteRow} from './tableSlice'\r\nimport {Link, useLocation} from 'react-router-dom'\r\n\r\nconst Table = ({ rows, deleteRow }) => {\r\n    const location = useLocation();\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>id</th>\r\n            <th>name</th>\r\n            <th>gender</th>\r\n            <th>pic</th>\r\n            <th>action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rows.map(row => (\r\n            <tr key={row.id}>\r\n              <td>\r\n                <Link to={{\r\n                    pathname: `/test/${row.id}`,\r\n                    state: {backgroud: location}\r\n                }}>{row.id}</Link>\r\n              </td>\r\n              <td>{row.name}</td>\r\n              <td>{row.gender}</td>\r\n              <td>\r\n                <img src={row.pic} alt=\"\" />\r\n              </td>\r\n              <td>\r\n                <button onClick={() => deleteRow(row.id)}>delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n}\r\n\r\nconst mapState = state => ({ rows: state.table.rows });\r\nconst mapDispatch = {deleteRow}\r\nexport default connect(\r\n    mapState,\r\n    mapDispatch\r\n)(Table)","import React from \"react\";\r\nimport { fetchData } from \"./tableSlice\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Button = ({ fetch }) => {\r\n  return (\r\n    <button\r\n      onClick={ () => {\r\n                       const resultAction = fetch(1);\r\n                    //    setTimeout(() => resultAction.abort(), 1000);\r\n                     }}\r\n    >\r\n      fetch\r\n    </button>\r\n  );\r\n};\r\n\r\nconst mapDispatch = { fetch: fetchData };\r\nexport default connect(null, mapDispatch)(Button);\r\n","import React from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Modal = () => {\r\n    const history = useHistory();\r\n    const {id} = useParams();\r\n    const rows = useSelector(state => state.table.rows);\r\n    const row = rows.find(row => row.id === id);\r\n    if (!row) {\r\n      return null;\r\n    }\r\n    const back = e => {\r\n        e.stopPropagation();\r\n        history.goBack();\r\n    }\r\n    return (\r\n      <div\r\n        onClick={back}\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          bottom: 0,\r\n          right: 0,\r\n          background: \"rgba(0, 0, 0, 0.15)\"\r\n        }}\r\n      >\r\n        <div\r\n          className=\"modal\"\r\n          style={{\r\n            position: \"absolute\",\r\n            background: \"#fff\",\r\n            top: \"10%\",\r\n            left: \"10%\",\r\n            right: \"10%\",\r\n            padding: 15,\r\n            border: \"2px solid #444\"\r\n          }}\r\n        >\r\n          <h1>\r\n            <span>{row.id}/</span>\r\n            <span>{row.name}/</span>\r\n            <span>{row.gender}</span>\r\n          </h1>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"100%\"\r\n            }}\r\n          >\r\n            <img\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"auto\"\r\n              }}\r\n              src={row.pic}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\r\nimport {Provider} from 'react-redux'\r\nimport {combineReducers} from 'redux'\r\nimport {createLogger} from 'redux-logger'\r\nimport table from './features/table/tableSlice'\r\nimport Table from './features/table/Table'\r\nimport Button from './features/table/Button'\r\nimport './main.css'\r\nimport {persistStore, persistReducer} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {PersistGate} from 'redux-persist/integration/react'\r\nimport {BrowserRouter as Router, Switch, Route, useLocation} from 'react-router-dom'\r\nimport Modal from './features/table/Modal'\r\n\r\nconst reducer = combineReducers({\r\n  table\r\n})\r\nconst middleware = []\r\nif(process.env.NODE_ENV !== 'production'){\r\n  middleware.push(createLogger())\r\n}\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: [...getDefaultMiddleware(), ...middleware]\r\n})\r\n\r\nconst App = () => {\r\n  const location = useLocation();\r\n  const backgroud = location.state && location.state.backgroud;\r\n        return (\r\n          <div>\r\n            <Switch location={backgroud || location}>\r\n              <Route path=\"/test\">\r\n                <Table />\r\n                <Button />\r\n              </Route>\r\n            </Switch>\r\n            {backgroud && (\r\n              <Route path=\"/test/:id\">\r\n                <Modal />\r\n              </Route>\r\n            )}\r\n          </div>\r\n        );\r\n}\r\n\r\nconst persistor = persistStore(store)\r\nReactDom.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <Router>\r\n        <App/>\r\n      </Router>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}